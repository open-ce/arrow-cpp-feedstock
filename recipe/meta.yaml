{% set version = "8.0.0" %}
{% set build_ext_version = version %}
{% set build_ext = "cuda" if build_type == 'cuda' else "cpu" %}
{% set proc_build_number = "1" %}

package:
  name: arrow-cpp-ext
  version: {{ version }}

source:
  git_url: https://github.com/apache/arrow/
  git_rev: apache-arrow-{{ version }}

build:
  number: 2
  run_exports:
    - {{ pin_subpackage("arrow-cpp", max_pin="x.x.x") }}

outputs:
  - name: arrow-cpp-proc
    build:
      number: {{ proc_build_number }}
      string: {{ build_ext }}
    test:
      commands:
        - exit 0
    about:
      home: http://github.com/apache/arrow
      license: Apache-2.0
      license_file:
        - LICENSE.txt
      summary: 'A meta-package to select Arrow build variant'

  - name: arrow-cpp
    script: build-arrow.sh
    build:
      string: py{{ CONDA_PY}}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ build_ext }}{{ cudatoolkit | replace(".*", "") }} #[build_type == 'cuda']
      string: py{{ CONDA_PY}}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ build_ext }}  #[build_type == 'cpu']
      script_env:
        - CUDA_HOME            #[build_type == 'cuda']        
        - GCC_11_HOME #[ppc_arch == 'p10']
      run_exports:
        - {{ pin_subpackage("arrow-cpp", max_pin="x.x.x") }}
      ignore_run_exports:
        - cudatoolkit
        - grpc-cpp
        - libprotobuf
        - zstd
        - orc
      track_features:
        {{ "- arrow-cuda" if build_type == 'cuda' else "" }}
    requirements:
      build:
        - abseil-cpp {{ abseil_cpp }}
        - libprotobuf {{ protobuf }}
        - grpc-cpp {{ grpc_cpp }}
        # to avoid https://gitlab.kitware.com/cmake/cmake/-/issues/18810
        - cmake 3.19        # [not s390x]
        - cmake {{ cmake }} # [s390x]
        - autoconf
        - ninja
        - make
        - {{ compiler('c') }}              #[ppc_arch != "p10"]
        - {{ compiler('cxx') }}            #[ppc_arch != "p10"]
      host:
        # Disable AWS S3 support
        #- aws-sdk-cpp
        - abseil-cpp {{ abseil_cpp }}
        - boost-cpp {{ boost }}
        - brotli
        - bzip2
        - c-ares
        - cudatoolkit {{ cudatoolkit }}    #[build_type == 'cuda']
        - gflags
        - glog
        - grpc-cpp {{ grpc_cpp }}
        - libprotobuf {{ protobuf }}
        - llvmdev 10  # [not s390x]
        - libutf8proc
        - lz4-c
        - numpy {{ numpy }}
        - orc 1.7.*
        - python {{ python }}
        - rapidjson
        - re2
        - snappy
        - thrift-cpp
        - zlib {{ zlib }}
        - zstd {{ zstd }}
      run:
        - brotli  # [s390x]
        - {{ pin_compatible('numpy', lower_bound='1.16') }}
        - cudatoolkit {{ cudatoolkit }}    #[build_type == 'cuda']
        - python {{ python }}
        - grpc-cpp {{ grpc_cpp }}
        - libprotobuf {{ protobuf }}
        - zstd {{ zstd }}
        - orc 1.7.*
        - libutf8proc  # [s390x]
      run_constrained:
        - arrow-cpp-proc * {{ build_ext }}

    about:
      home: http://github.com/apache/arrow
      license: Apache-2.0
      license_file:
        - LICENSE.txt
      summary: C++ libraries for Apache Arrow

    test:
      requires:
        - conda-build
      commands:
        # headers
        - test -f $PREFIX/include/arrow/api.h
        - test -f $PREFIX/include/arrow/flight/types.h
        - test -f $PREFIX/include/plasma/client.h
        # - test -f $PREFIX/include/gandiva/engine.h 
        - test -f $PREFIX/include/parquet/api/reader.h

        # shared
        - test -f $PREFIX/lib/libarrow${SHLIB_EXT}
        - test -f $PREFIX/lib/libarrow_dataset${SHLIB_EXT}
        - test -f $PREFIX/lib/libarrow_flight${SHLIB_EXT}
        - test -f $PREFIX/lib/libarrow_python${SHLIB_EXT}
        - test -f $PREFIX/lib/libparquet${SHLIB_EXT}
        - test -f $PREFIX/lib/libplasma${SHLIB_EXT}
        - test -f $PREFIX/lib/libarrow_cuda${SHLIB_EXT}    # [build_type == 'cuda']
        - test ! -f $PREFIX/lib/libarrow_cuda${SHLIB_EXT}  # [build_type != 'cuda']   

        # absence of static libraries
        - test ! -f $PREFIX/lib/libarrow.a
        - test ! -f $PREFIX/lib/libarrow_dataset.a
        - test ! -f $PREFIX/lib/libarrow_flight.a
        - test ! -f $PREFIX/lib/libarrow_python.a
        - test ! -f $PREFIX/lib/libplasma.a
        - test ! -f $PREFIX/lib/libparquet.a
        # - test ! -f $PREFIX/lib/libgandiva.a

        # conda tools
        - conda inspect linkages -p $PREFIX $PKG_NAME

  - name: pyarrow
    script: build-pyarrow.sh
    build:
      string: py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ build_ext }}{{ cudatoolkit | replace(".*", "") }} #[build_type == 'cuda']
      string: py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ build_ext }}  #[build_type == 'cpu']
{% if build_type == 'cuda' %}
      script_env:
        - CUDA_HOME
{% endif %}
      ignore_run_exports:
        - cudatoolkit
      track_features:
        {{ "- arrow-cuda" if build_type == 'cuda' else "" }}
    requirements:
      build:
        - cmake
        - ninja
        - make
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
      host:
        - {{ pin_subpackage('arrow-cpp', exact=True) }}
        - cudatoolkit {{ cudatoolkit }}  # [build_type == 'cuda']
        - cython
        - numpy {{ numpy }}
        - python {{ python }}
        - setuptools {{ setuptools }}
        - setuptools_scm 5.0.2
        - setuptools-scm 5.0.2
        - six {{ six }}
      run:
        - {{ pin_subpackage('arrow-cpp', exact=True) }}
        - {{ pin_compatible('numpy', lower_bound='1.16') }}
        - cudatoolkit {{ cudatoolkit }}  # [build_type == 'cuda']
        - python {{ python }}
      run_constrained:
        - arrow-cpp-proc * {{ build_ext }}

    about:
      home: http://github.com/apache/arrow
      license: Apache-2.0
      license_file:
        - LICENSE.txt
      summary: Python libraries for Apache Arrow

    test:
      imports:
        - pyarrow
        - pyarrow.dataset
        - pyarrow.flight
        - pyarrow.orc
        - pyarrow.parquet
        - pyarrow._hdfs
      commands:
        - test ! -f ${SP_DIR}/pyarrow/tests/test_array.py

about:
  home: http://github.com/apache/arrow
  license: Apache-2.0
  license_file:
    - LICENSE.txt
  summary: C++ and Python libraries for Apache Arrow

extra:
  recipe-maintainers:
    - open-ce/open-ce-dev-team
